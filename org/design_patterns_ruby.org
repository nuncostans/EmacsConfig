#+title: Design patterns in ruby
#+category: ruby

* decorator
Decorator is a class that add functionality to another class
#+begin_src ruby :tangle yes
class A
  def initialize(name)
    @name = name
  end

  attr_readers :name
end

class B < A
  def initialize(name, age)
    @age = age
    super
  end

  attr_readers :name, :age
end
#+end_src

* presenter
Presenter is a class with presentation functionality for(to) another class

#+begin_src ruby :tangle yes
class A
  # fix this
  def initialize(name)
    @name = name
  end

  attr_readers :name
end

class B < A
  def initialize(name, age)
    @age = age
    super
  end

  attr_readers :name, :age
end
#+end_src
