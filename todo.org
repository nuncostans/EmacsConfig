
* TODO ERUBY tasks
** TODO Write a gem for identicon
** TODO Add identicon gem to two this application
** TODO Use websockets for comments
** TODO Refresh knowledge of Rack.
** TODO Glance through Sinatra and Trailblazer docs.
** TODO Create doc with frameworks areas of usage, pros and cons.

** TODO Create 2 MVC apps using Hanami and Padrino. Use GitHub and deploy to Heroku.
*** TODO Implement CRUD actions for 2 resources (e.g. Post <-* Comment, Gallery <-* Image or your own idea).
*** TODO Use MongoDB for one project and PostgreSQL with Sequel as ORM for another.
*** TODO Use simple HTML views or FE framework of your choice.

** TODO Only for 1 app (you choose it):
*** TODO Add your own extra Rack middleware. It could be a simple one like adding custom HTTP header, embedding HTML meta tag or logging.
*** TODO Build RESTful JSON API with Grape using Rack::Cascade for 1 resource.

** TODO [Optional] Build simple service using RoR or other framework, Trailblazer, and Ruby Object Mapper

** TODO This is called (voluntary) context switching.
https://github.com/ruby-concurrency/concurrent-ruby
https://www.toptal.com/ruby/ruby-concurrency-and-parallelism-a-practical-primer
https://medium.com/@WesleyDavis/multi-threading-in-ruby-1c075f4c7410
https://habrahabr.ru/post/94574/


* SETUP Splunk forwarder(steps)
** Here are the main ways that you can configure data inputs on a forwarder:
*** Specify inputs during initial deployment.
*** For Windows forwarders, specify common inputs during the installation process.
*** For *nix forwarders, specify inputs directly after installation.
*** Use the CLI.
*** Edit inputs.conf.
*** Install an app that contains the inputs you want.
*** Use Splunk Web to configure the inputs and a deployment server to copy the resulting inputs.conf file to forwarders.


* DONE install kibana
** https://www.elastic.co/products/kibana
* install logstash
** https://www.elastic.co/products/logstash
* TODO sutup communication between _kibana_ and _logstash_
* DONE Install beats
** https://www.elastic.co/products/beats
** filebeats
** metricbeat
** packetbeat
* DONE install apm
** https://www.elastic.co/solutions/apm
** setup apm for rails

* TODO ELK:
** What is search
*** Information retrieval - search engine
**** Sort
**** Highlight
**** Aggregation
**** Suggestions
*** Search engine
Happens twice
into index and search
**** Indexing
**** Tokinize
**** Filtering
**** Date parsing

*** Tokenization
**** Found word bounderies
**** Understand pattern
**** Streaming
- Plurals
- Conjugations
- lookup tables
- suffic

*** Filtering 
cast to lowercast
remove stop words like "a" or "the"
add synonyms
Relevance Scoring

** Elasticsearch

*** default algth TF/IDF

*** Real-Time Data 1 second gap
*** Real-Time Analytics
*** Distributed
*** Hight Availability
*** Multitenancy
*** Full-Text Search built on top Apach Lucene
*** Documet-Oriented
*** Schema-Free, it actuall has schema, it automaticaly create schema, or you can create it before _indexing_
*** Developer-Friendly, RESTful API

<REST verb> <Index> <Type> <ID>
PUT    sales order 123
GET    sales order 123
DELETE sales
