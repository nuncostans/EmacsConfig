
* TODO ERUBY tasks
** TODO Write a gem for identicon
** TODO Add identicon gem to two this application
** TODO Use websockets for comments
** TODO Refresh knowledge of Rack.
** TODO Glance through Sinatra and Trailblazer docs.
** TODO Create doc with frameworks areas of usage, pros and cons.

** TODO Create 2 MVC apps using Hanami and Padrino. Use GitHub and deploy to Heroku.
*** TODO Implement CRUD actions for 2 resources (e.g. Post <-* Comment, Gallery <-* Image or your own idea).
*** TODO Use MongoDB for one project and PostgreSQL with Sequel as ORM for another.
*** TODO Use simple HTML views or FE framework of your choice.

** TODO Only for 1 app (you choose it):
*** TODO Add your own extra Rack middleware. It could be a simple one like adding custom HTTP header, embedding HTML meta tag or logging.
*** TODO Build RESTful JSON API with Grape using Rack::Cascade for 1 resource.

** TODO [Optional] Build simple service using RoR or other framework, Trailblazer, and Ruby Object Mapper

** TODO This is called (voluntary) context switching.
https://github.com/ruby-concurrency/concurrent-ruby
https://www.toptal.com/ruby/ruby-concurrency-and-parallelism-a-practical-primer
https://medium.com/@WesleyDavis/multi-threading-in-ruby-1c075f4c7410
https://habrahabr.ru/post/94574/


* SETUP Splunk forwarder(steps)
** Here are the main ways that you can configure data inputs on a forwarder:
*** Specify inputs during initial deployment.
*** For Windows forwarders, specify common inputs during the installation process.
*** For *nix forwarders, specify inputs directly after installation.
*** Use the CLI.
*** Edit inputs.conf.
*** Install an app that contains the inputs you want.
*** Use Splunk Web to configure the inputs and a deployment server to copy the resulting inputs.conf file to forwarders.


* TODO ELK tasks
** DONE install kibana
*** https://www.elastic.co/products/kibana
** TODO sutup communication between _kibana_ and _logstash_
** install logstash
*** https://www.elastic.co/products/logstash
** DONE Install beats
*** https://www.elastic.co/products/beats
*** filebeats
*** metricbeat
*** packetbeat
** DONE install apm
*** https://www.elastic.co/solutions/apm
*** setup apm for rails


* TODO Cherwell tasks
** DONE Alert script
http://docs.splunk.com/Documentation/Splunk/7.1.2/Alert/Alertexamples
** DONE Splunk commands
** DONE Mock logs
https://github.com/kiritbasu/Fake-Apache-Log-Generator
** DONE Modular input
- docs
http://docs.splunk.com/Documentation/Splunk/7.1.2/AdvancedDev/ModInputsIntro
http://dev.splunk.com/view/python-sdk/SP-CAAAER3
- example
http://docs.splunk.com/Documentation/Splunk/latest/AdvancedDev/ModInputsExample#Twitter_example


** TODO Create a script for inserting new 500 records in CW DB from Jenkins;
*** DONE Records should have different statuses
**** Open
**** In Progress
**** Resolved
*** DONE Records should be from last 30 days timeframe;
*** DONE For cases when:
 Status = "In Progress" then field updated_at >created_at with randomly up to 24 hours and field closed_at = null;
 Status = "Resolved" then field updated_at >created_at with randomly up to 96 hours and field closed_at = updated_at ;
*** TODO Other fields
 {
   "status": {
     "Open",
     "In progress",
     "Resolved"
   },
   "Service": {
     "Client support": {
       "short_description": "Client support incident",
       "description": "Incident created on request of client for additional consultation",
       "category": "Client"
     },
     "E-mail/Calendaring": {
       "short_description": "E-mail/Calendaring incident",
       "description": "Incident created on request of client for defection of CI with Asset_Tag:#\"{Asset_Tag}\"",
       "category": "Desktop Client"
     },
     "Infrastructure Support": {
       "short_description": "Infrastructure incident",
       "description": "Incident created on defection of CI with Asset_Tag:#\"{Asset_Tag}\"",
       "category": {
         "Printer",
         "Phone",
         "Computuer",
         "Fax"
       }
     },
     "Help Desc": {
       "short_description": "Helpdesck incident",
       "description": "Incident created by request of help desk\"",
       "category": "Support"
     }
   },
   "customer_rec_id": "{Auto_id}",
   "priority": {
     1,
     2,
     3,
     4,
     5
   },
   "source": {
     "Splunk",
     "Cherwell"
   },
   "incident_type": "incident",
   "subcategory": "Submit incident"
 }	
